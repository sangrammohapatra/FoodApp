{"ast":null,"code":"var _jsxFileName = \"O:\\\\React\\\\Project\\\\Food App\\\\myfoodapp\\\\src\\\\components\\\\Cart\\\\ShowFinalOrder.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport Classes from \"./CartItem.module.css\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\nimport CartContext from \"../../Store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowOrder = props => {\n  _s();\n  const price = `Rs. ${props.price.toFixed(2)}`;\n  const eachItemTotal = props.amount * props.price;\n  const cartCtx = useContext(CartContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sl. No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Item Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: props.index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: props.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: eachItemTotal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, props.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowOrder, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n_c = ShowOrder;\nexport default ShowOrder;\nvar _c;\n$RefreshReg$(_c, \"ShowOrder\");","map":{"version":3,"names":["useContext","Classes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CartContext","jsxDEV","_jsxDEV","ShowOrder","props","_s","price","toFixed","eachItemTotal","amount","cartCtx","children","component","fileName","_jsxFileName","lineNumber","columnNumber","index","scope","name","key","_c","$RefreshReg$"],"sources":["O:/React/Project/Food App/myfoodapp/src/components/Cart/ShowFinalOrder.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport Classes from \"./CartItem.module.css\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport CartContext from \"../../Store/cart-context\";\r\n\r\nconst ShowOrder = (props) => {\r\n  const price = `Rs. ${props.price.toFixed(2)}`;\r\n  const eachItemTotal = props.amount * props.price;\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  return (\r\n    <div>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Sl. No.</TableCell>\r\n                <TableCell>Item Name</TableCell>\r\n                <TableCell>Amount</TableCell>\r\n                <TableCell>Total</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow key={props.key}>\r\n                <TableCell>{props.index}</TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {props.name}\r\n                </TableCell>\r\n                <TableCell>{props.amount}</TableCell>\r\n                <TableCell>{eachItemTotal}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowOrder;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SACEC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,QACA,eAAe;AACtB,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,KAAK,GAAI,OAAMF,KAAK,CAACE,KAAK,CAACC,OAAO,CAAC,CAAC,CAAE,EAAC;EAC7C,MAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAM,GAAGL,KAAK,CAACE,KAAK;EAChD,MAAMI,OAAO,GAAGnB,UAAU,CAACS,WAAW,CAAC;EAEvC,oBACEE,OAAA;IAAAS,QAAA,eACIT,OAAA,CAACN,cAAc;MAACgB,SAAS,EAAEb,KAAM;MAAAY,QAAA,eAC/BT,OAAA,CAACT,KAAK;QAAAkB,QAAA,gBACJT,OAAA,CAACL,SAAS;UAAAc,QAAA,eACRT,OAAA,CAACJ,QAAQ;YAAAa,QAAA,gBACPT,OAAA,CAACP,SAAS;cAAAgB,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC9Bd,OAAA,CAACP,SAAS;cAAAgB,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAChCd,OAAA,CAACP,SAAS;cAAAgB,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC7Bd,OAAA,CAACP,SAAS;cAAAgB,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZd,OAAA,CAACR,SAAS;UAAAiB,QAAA,eACRT,OAAA,CAACJ,QAAQ;YAAAa,QAAA,gBACPT,OAAA,CAACP,SAAS;cAAAgB,QAAA,EAAEP,KAAK,CAACa;YAAK;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpCd,OAAA,CAACP,SAAS;cAACiB,SAAS,EAAC,IAAI;cAACM,KAAK,EAAC,KAAK;cAAAP,QAAA,EAClCP,KAAK,CAACe;YAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACZd,OAAA,CAACP,SAAS;cAAAgB,QAAA,EAAEP,KAAK,CAACK;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACrCd,OAAA,CAACP,SAAS;cAAAgB,QAAA,EAAEH;YAAa;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA,GANzBZ,KAAK,CAACgB,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEV,CAAC;AAACX,EAAA,CAhCIF,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}